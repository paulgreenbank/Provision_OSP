---
## RedHat Ansible Boot Camp homework assignment
## Playbook have been written as a PoC for a 3Tier Application deployment
## All playbook have been written via Ansible Core and used in Ansible Tower

## Created a written by Paul Greenbank - Technical Consultant for Open System Specialists

## Role description:
#
# 3 Security groups are created for each component of the application, `application`, `database`
# & `frontend`. Rules are then assigned to the security groups to open ports necessary for the
# applications internal and external connectivity.
#

## Role enhancements post PoC:
#
# variablization of these modules to reduce the duplication in calling each module 3 times, it would also
# allow for more security groups to be created as the application grows without any changes to the role
# itself.
#

# Setup Openstack security groups for access

  - name: Create application server security group
    os_security_group:
      cloud: ospcloud
      state: present
      name: application_servers
      description: open application and access ports

  - name: Create database server security group
    os_security_group:
      cloud: ospcloud
      state: present
      name: database_servers
      description: open database and access ports

  - name: Create frontend server security group
    os_security_group:
      cloud: ospcloud
      state: present
      name: frontend_servers
      description: open frontend and access ports

# Create security rules for security groups

  - name: Create security group rules for application_servers
    os_security_group_rule:
      cloud: ospcloud
      security_group: application_servers
      protocol: tcp
      port_range_min: "{{ item.port }}"
      port_range_max: "{{ item.port }}"
      remote_ip_prefix: "{{ item.prefix }}"
    with_items:
      - { port: '8080', prefix: '0.0.0.0/0' }
      - { port: '22',  prefix: '0.0.0.0/0' }

  - name: Create security group rules for database_servers
    os_security_group_rule:
      cloud: ospcloud
      security_group: database_servers
      protocol: tcp
      port_range_min: "{{ item.port }}"
      port_range_max: "{{ item.port }}"
      remote_ip_prefix: "{{ item.prefix }}"
    with_items:
      - { port: '5432', prefix: '0.0.0.0/0' }
      - { port: '22',  prefix: '0.0.0.0/0' }

  - name: Create security group rules for frontend_servers
    os_security_group_rule:
      cloud: ospcloud
      security_group: frontend_servers
      protocol: tcp
      port_range_min: "{{ item.port }}"
      port_range_max: "{{ item.port }}"
      remote_ip_prefix: "{{ item.prefix }}"
    with_items:
      - { port: '80', prefix: '0.0.0.0/0' }
      - { port: '22',  prefix: '0.0.0.0/0' }

# Creating generic icmp security rule for all security groups

  - name: Create Generic ICMP rule for all security groups
    os_security_group_rule:
      cloud: ospcloud
      security_group: "{{ item.security_group }}"
      protocol: icmp
      remote_ip_prefix: "{{ item.prefix }}"
    with_items:
      - { security_group: 'application_servers', prefix: '0.0.0.0/0' }
      - { security_group: 'database_servers', prefix: '0.0.0.0/0' }
      - { security_group: 'frontend_servers', prefix: '0.0.0.0/0' }

