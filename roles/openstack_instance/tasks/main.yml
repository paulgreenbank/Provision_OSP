---
## RedHat Ansible Boot Camp homework assignment
## Playbook have been written as a PoC for a 3Tier Application deployment
## All playbook have been written via Ansible Core and used in Ansible Tower

## Created a written by Paul Greenbank - Technical Consultant for Open System Specialists

## Role description:
#
# Creates OpenStack instances based on the already defined instance `flavor` and assigns
# instance to a security group for access / connectivity.
# As part of the instance creation two items are injected into the instance
#  1. cloud-user SSH public key for access
#  2. Customs repofile for software repositories
# A floating IP address is assigned to the instance and we wait for SSH to become available before
# moving on to create the next instance.
# The floating IP address is output via debug after it is assigned.
#

# Create and configure Openstack server instance

  - name: Create server instance
    os_server:
      state: present
      cloud: ospcloud
      name: "{{ instance_name }}"
      image: rhel-guest
      meta: "group={{ group }},deployment_name={{ deployment }}"
      flavor: "{{ instance_flavor }}"
      security_groups: "{{ security_group }}"
      key_name: ansible_ssh
      network: internal_net
      wait: yes
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    register: instanceip

  - name: Assign external floating IP to "{{ instance_name }}"
    os_floating_ip:
      cloud: ospcloud
      state: present
      reuse: yes
      server: "{{ instance_name }}"
      network: external_net
      wait: true
      timeout: 180
    register: instancefloatingip

  - name: Show "{{ instanceip }}" public IP
    debug: var=instancefloatingip.floating_ip.floating_ip_address

  - name: Wait for "{{ instance_name }}" to be available
    wait_for:
      host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
      port: 22
      search_regex: OpenSSH
      timeout: 600
    delegate_to: "{{ inventory_hostname }}"
